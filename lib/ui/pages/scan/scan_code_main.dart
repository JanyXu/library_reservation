import 'package:audioplayers/audioplayers.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:images_picker/images_picker.dart';import 'package:library_reservation/core/service/config/api_config.dart';import 'package:library_reservation/core/service/network/network.dart';import 'package:library_reservation/provide_model/scan_speed_provide_model.dart';import 'package:library_reservation/ui/pages/scan/scan_page.dart';import 'package:library_reservation/ui/pages/webview/setting_page.dart';import 'package:orientation/orientation.dart';import 'package:provider/provider.dart';import 'package:scan/scan.dart';class HomePage extends StatefulWidget {  static const String routeString = '/';  const HomePage({Key? key}) : super(key: key);  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  @override  void initState() {    // TODO: implement initState    super.initState();    //OrientationPlugin.forceOrientation(DeviceOrientation.portraitUp);    // SystemChrome.setPreferredOrientations([    //   DeviceOrientation.portraitUp,    //   DeviceOrientation.portraitDown    //   //DeviceOrientation.landscapeRight,    // ]);    SystemChrome.setPreferredOrientations(DeviceOrientation.values);  }  @override  Widget build(BuildContext context) {    _getCategoryData();    return Container(      decoration: BoxDecoration(          image: DecorationImage(            image: AssetImage('assets/images/main_ground.png'),            fit: BoxFit.cover,          )),      child: Consumer<TestProviderModel>(builder: (ctx, vm, child) {        print('${vm.home_defult}');        // bool portraitFlag = orientation == Orientation.portrait        //     ? true        //     : false;        return vm.home_defult ? HomeDefaultPage() : ScanPage();      }),    );  }  static Future<dynamic> _getCategoryData() async {    Map<String, dynamic> map = {};    final result =    await HttpUtil.instance.get(ApiConfig.category, parameters: map);    print(result);    return result;  }}class HomeDefaultPage extends StatefulWidget {  const HomeDefaultPage({    Key? key,  }) : super(key: key);  @override  State<HomeDefaultPage> createState() => _HomeDefaultPageState();}class _HomeDefaultPageState extends State<HomeDefaultPage> {  @override  Widget build(BuildContext context) {    return Scaffold(        extendBodyBehindAppBar: true,        backgroundColor: Colors.transparent, //把scaffold的背景色改成透明        appBar: AppBar(          elevation: 0,          centerTitle: true,          backgroundColor: Colors.transparent,          //把appbar的背景色改成透明          // elevation: 0,//appbar的阴影          title: Text("扫码助手",              style: Theme.of(context)                  .textTheme                  .headline1!                  .copyWith(color: Colors.white)),          actions: [            GestureDetector(              child: Container(                padding: EdgeInsets.symmetric(horizontal: 16),                child: Icon(                  Icons.settings,                  color: Colors.white,                ),              ),              onTap: () {                //跳转到设置                Navigator.of(context).pushNamed(SettingPage.routeString);              },            )          ],        ),        body: Center(            child: Column(              crossAxisAlignment: CrossAxisAlignment.stretch,              mainAxisSize: MainAxisSize.min,              children: [                Container(                  color: Colors.yellow,                  child: Image(                    image: AssetImage(                      'assets/images/main_head_ground.png',                    ),                    fit: BoxFit.scaleDown,                  ),                ),                Container(                    margin: EdgeInsets.symmetric(horizontal: 16),                    padding: EdgeInsets.symmetric(vertical: 20),                    decoration: BoxDecoration(                        color: Colors.white,                        image: DecorationImage(                          image: AssetImage(                            'assets/images/main_middle_ground.png',                          ),                          fit: BoxFit.fill,                        )),                    child: Column(mainAxisSize: MainAxisSize.min, children: [                      Image(                          image: AssetImage('assets/images/main_scan_ground.png')),                      SizedBox(                        height: 50,                      ),                      Consumer<TestProviderModel>(builder: (ctx, vm, child) {                        return MaterialButton(                          child: Image(                            image: AssetImage('assets/images/main_scan_button.png'),                          ),                          onPressed: () {                            print('onPressed');                            vm.home_defult = false;                            // print('dd3');                            // Navigator.push(context, MaterialPageRoute(builder: (_) {                            //   return ScanPage();                            // }));                          },                        );                      }),                    ])),                Container(                  margin: EdgeInsets.symmetric(horizontal: 16),                  padding: EdgeInsets.all(16),                  decoration: BoxDecoration(                      color: Colors.red,                      image: DecorationImage(                        image: AssetImage('assets/images/main_bottom_ground.png'),                        fit: BoxFit.fill,                      )),                  child: Text.rich(                    TextSpan(children: [                      TextSpan(                          text: '注意事项：\n',                          style: Theme.of(context)                              .textTheme                              .headline1!                              .copyWith(color: Colors.white)),                      TextSpan(                          text: '1、扫码助手需要使用您的相机功能，请授权使用;\n2、可以识别的码：渝快码、电子社保码等。',                          style: Theme.of(context)                              .textTheme                              .headline1!                              .copyWith(color: Colors.white, fontSize: 14)),                    ]),                  ),                )              ],            )));  }}