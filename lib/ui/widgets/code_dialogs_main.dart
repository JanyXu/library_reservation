import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:library_reservation/core/service/config/color_config.dart';import 'package:library_reservation/core/service/utils/assets.dart';import 'package:library_reservation/core/model/scan_result_entity.dart';import 'dart:convert';import 'data_code.dart';import 'data_common.dart';class SCDialogsDataWidget extends StatelessWidget {  final bool isHorizontal;  const SCDialogsDataWidget({Key? key,this.isHorizontal = false}) : super(key: key);  @override  Widget build(BuildContext context) {    return Center(      child: Stack(        children: [          _buildGroundWidget(isHorizontal),          // isHorizontal ? _buildHorizontalWidget():_buildVerticalWidget()          FutureBuilder<ScanResultEntity>(            future: _getData(),            builder: (ctx , snapshot){              if (!snapshot.hasData) return SizedBox(height: 0);              print(snapshot.data!.userName);              return isHorizontal ? _buildHorizontalWidget():_buildVerticalWidget();            },          )        ],      )    );  }  static Future<ScanResultEntity> _getData() async {    final jsonStr = await rootBundle.loadString('assets/voice/Category.json');    final resData = jsonDecode(jsonStr);    final data = ScanResultEntity().fromJson(resData);    return data;  }  Widget _buildGroundWidget(bool isHorizontal){    return Image.asset(      isHorizontal ? Assets.bg_horizontal : Assets.bg_vertical,      width: isHorizontal ? 607 : 322,      height: isHorizontal ? 257 : 574,      fit: BoxFit.cover,    );  }  Widget _buildHorizontalWidget(){    return Row(      mainAxisAlignment: MainAxisAlignment.spaceBetween,      children: [        SCDialogsDataCodeWidget(isHorizontal: true),        Column(          children: _buildCommonWidget()        )      ],    );  }  Widget _buildVerticalWidget(){    return Column(      mainAxisAlignment: MainAxisAlignment.spaceBetween,      children: [        SCDialogsDataCodeWidget(),        Row(          children: _buildCommonWidget()        )      ],    );  }  List<Widget> _buildCommonWidget(){    return [      SCDialogsDataCommonWidget(        title: '新冠疫苗',        imageAsset: Assets.vaccine,        name: '已接种新冠疫苗',        subName: '已接种加强针',      ),      SCDialogsDataCommonWidget(        title: '核酸检测',        imageAsset: Assets.detection,        name: '阴性',        color: ColorConfig.color0BFF00,        subName: '2022-04-03',      )    ];  }}